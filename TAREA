from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import f1_score
from sklearn.metrics import accuracy_score
from sklearn.metrics import matthews_corrcoef
from sklearn.tree import DecisionTreeClassifier

Flores = load_iris()
x = Flores.data
y = Flores.target

x_train, x_test, y_train, y_test = train_test_split(x,y, test_size= 0.25, random_state=0)
Escalador = StandardScaler()
x_train = Escalador.fit_transform(x_train)
x_test = Escalador.fit_transform(x_test)

NaiveBayes = GaussianNB()
NaiveBayes.fit(x_train, y_train)
PrediccionNB = NaiveBayes.predict(x_test)


NaiveF1 = f1_score(y_test, PrediccionNB, average= 'micro')
NaiveAccuracy = accuracy_score(y_test, PrediccionNB)
NaiveMatthews = matthews_corrcoef(y_test, PrediccionNB)

print ('Naive Bayes')
print ('F1 Score:', NaiveF1)
print ('Accuracy:', NaiveAccuracy)
print ('Coeficiente de Matthews:', NaiveMatthews)

AlbolesDeDecision = DecisionTreeClassifier(criterion='entropy', random_state=0)
AlbolesDeDecision.fit(x_train, y_train)
PrediccionArbol = AlbolesDeDecision.predict(x_test)

ArbolF1 = f1_score(y_test, PrediccionArbol, average= 'micro')
ArbolAccuracy = accuracy_score(y_test, PrediccionArbol)
ArbolMatthews = matthews_corrcoef(y_test, PrediccionArbol)

print ('Arboles de decision')
print ('F1 Score:', ArbolF1)
print ('Accuracy:', ArbolAccuracy)
print ('Coeficiente de Matthews:', ArbolMatthews)
